{"pages":[],"posts":[{"title":"","text":"1 Define the term ‘Iron Triangle’ used in the project life-cycle? The Iron Triangle refers to the constraints related to a project. The three sides include: the time, the cost, and the scope &amp; resources a project requires. The change on one constrain will certainly have effects on the other two. For example, if we cut down the expenses for the project, the scope will shrink, and the time required to complete the project might delay. 2 Explain the main reasons to avoid using the action ‘will’ as language requirements? The use of ‘will’ needs to be avoided for legal reasons. A well-formed requirement statement should be measurable and bounded and should also be verifiable. But the use of 'will' doesn’t give an exact time scope for the context. For example, by saying ‘the website will be built’, it doesn’t guarantee a final product to be verified. 3 Explain the main methods of construction used in the development phase of the project life-cycle? There are three common methods of construction: 1. Building a software from scratch. It is a 0 to 1 process. e.g. building a website from empty .html and .css files. 2. Re-using an existing software, with or without modification, is to adapt templates that were developed by others. e.g. building a website using WIX. 3. Acquisition. This method refers to any open-source projects. e.g. building a website using Microweber.org. ?????? 4 Explain the main purpose of the project planning phase in the project life-cycle? Project planning is to enable the tracking process and increase collaboration by system analysis and design activities. Its main purpose is to determine the scope of the project as well as the objective of the project. For example, if the budget wasn't properly estimated in the planning stage, then the project might overspend money without a desirable outcome. 5 Explain two software models or paradigms used in software development, you can highlight the benefits, and drawbacks of each. 1.Waterfall's advantages include: Easy to understand, Easy to manage, Fewer production issues, and Better budget management. Waterfall's disadvantages include: Not flexible, Doesn’t handle unexpected risks well, Not good for complex/long projects, and Difficult to capture all requirements upfront 2.V-Model's advantages include: Highly disciplined Simple to understand &amp; use Increased quality Accurately Tracks Progress V-Model's disadvantages include: High risk &amp; uncertainty Ill-suited to complex or long projects Doesn’t handle change well - hard to go back. Nothing concrete is created until midway through the process. 6 Explain in which scenarios the Agile model is suitable or not suitable to be used in software development models? Agile is an iterative &amp; incremental Model. It delivers iterations frequently to adapt changes requested from customers. It also reduces waste and empower team ownership. It is suitable for: Small to medium projects Product can be broken into independent functional parts Unclear/dynamic requirements Co-located teams Proactive, collaborative teams It is not suitable for: hierarchy static and routine project large scale projects with individual workers 7 Define the meaning of ‘models and paradigms’ in a software development environment? Models and paradigms describe a structure of procedures used to complete a software development project. It acts like an overall plan of how to plan a project. Different models and paradigms are chosen to fit different project needs. For example, the waterfall model has less advantage in a project that has constantly changing requirements, while having more advantage in a project that is static and low in cost. 8 Explain the following statement ‘how can a software methodology impact the project life-cycle’ ? Companies intergrate software development methodologies expecting a greatly impoved project performance. They play a role in supporting the project team throughout the life cycle to achieve the projects' goals. Each development team should choose the most suitable methodology to apply to the development project. Different methods rotates the project life-cycle in different frequency. 9 Define the term ‘Kanban’, and explain how it can be used in software projects? Kanban is a Japanese term that means 'billboard'. It is a framework in Agile based on a team's need and capacity. It focuses on visualizing the workflow by using a system of cards (Kanban) to represent tasks at different stages of the project. Moving the cards or tasks through the predetermined stages help the team to see their progress and identify where roadblocks might occur. The practices should be strickly followed to ensure its success. 10 Explain the main purposes of using sprint retrospectives in Scrum methodology? Sprint retrospective happens after the review session and the planning session. The main purpose is for the team to inspects itself and create a plan for improvement, such as improving relationships between team members, identifying what worked and what didn't work, reviewing the resource list, and improving the plan for implementation. The goal is to fix one thing at a time and make small, incremental changes from sprint to sprint. Using sprint retrospectives in Scrum methodology allows for rapid development and testing, especially within small teams. 11 Define the term ‘XP’ in Agile methods? 'XP' refers to 'Extreme Programming'. It is a software development methodology that strived for efficiency and customer satisfaction by practicing a set of specific values and rules in its teamwork workflow. It empowers the developers to adapt to the evolving and changing requirements even late in the project life cycle. Its goal is to allow small to mid-sized teams to develop high-quality product efficiently. 12 Explain how would lean software development model eliminate waste? Lean software development is focused on eliminating waste. The term 'waste' in this context refers to anything that is not adding the value to the project. Over-production, delay in process, unclear/changing requirements, partially done work, defects, task switching, extra features... all these above could produce waste. Unnecessary code or functionality Starting more than can be completed. Delay in the software development process. Unclear or constantly changing requirements. Partially done work. Defects and quality issues. Task switching. Each of these wastes should be systematically eliminated to maximize customer value. Keep simplicity is the key. 13 Define the term ‘sprint’ used in the software development model? 'Sprint' is a short period of time wherein a development team works to complete specific tasks, deliverables, or other small schivable targets that breaks down a complex software development project. Sprints typically are done weekly, and do not extend longer than one calendar month. A Sprint is composed of: - Sprint planning: the team gathers to determine how much work to be complete in a sprint. - Daily Scrum: 'stand-up meeting', quick touch points to make sure the team is running on schedule and everyone is involved in problem solving. - Sprint review: after a sprint completes, the project manager hosts a sprint review to demonstrate the complete outputs. - Sprint retrospective: discuss accomplishments and challenges to fix one thing at a time and make small, incremental changes in the next sprint. 14 Explain the main elements of stakeholder register used in the initiation phase in the project life-cycle?1 the main elements: Name, title, position, company and contact information of each stakeholder involved in the project. 2 Reporting relationships between stakeholders and others. 3 The main interests of stakeholders in the project. 4 Requirements 5 Internal External 6 Degree of participation 7 The level of access 8 communication. The main elements of stakeholder register include: - Stakeholder’s identification: Group name, location, contact details - Stakeholder’s assessment information: Role in the project, requirements - Stakeholder’s classification: Internal or external, Classified (based on their influence and impact on the project 15 Describe the main processes used in the project initiation? Project Initiation is to define the process needed to start a new project. It has two main activities: - Identify the stakeholders. A stakeholder can influence the success and the failure of the project. Thus, it is essential to record information such as their role, requirements, contacts...into the Stakeholder Register. - Develop a Project Charter. The project charter is used as the vision, mission, and success criteria of the project. Generally, it would include information such as the Iron Triangle, business value, risks, stakeholders, and so on. 16 Explain the following statement: In our opinion why do you think project planning fails? There are a few reasons that a project planning might fail. - The Planning phase is by Activity rather than Feature. - The Activities don’t finish early. - Lateness is passed down the schedule. - Activities are not independent. - Multitasking causes further delays. - The features are not developed by priority. - Uncertainty is ignored. - Estimates become commitments. 17 Describe how does the estimation concept work in agile methods? Estimation is roughly giving a time frame for how long a task need to be done. It is a relatively quick exercise that can be improved. The main idea of the Agile estimation is asking 'how big' questions, which is focusing on consistency rather than giving specific hours. For example, we can catergorize tasks into 'Small' 'Medium' 'Large', and estimate Small tasks need 3-4 hours, Medium tasks 1-2 days, and Large tasks 5-7 days. Estimate only what is needed to avoid overthinking. 18 Explain the main factors affecting the estimation in agile methods? The main factors affecting the Agile Estimation include: - Wishful Thinking: It means to base the estimates on top of the head rather than reasoning. Data or past experiences should be used as an evidence to each estimation. - Anchoring: It means to overly rely on the first information being seen. The initial piece of information usually dominates the decisions afterwards, but it may not be true. - Planning fallacy: It means to underestimate for being too optimized. Personal bias happens for sure, so it's important to recognize its existence and to avoid it as much as we can. - Cognitive Dissonance: It means to hold two contradictory ideas simultaneously. Ideas should be aligned with each other. 19 Define documentation and explain the main perspective of including documentation in projects? The base material of software crafting is Knowledge, and documents are used for managing them. Knowledge can be gathered from requirements and then transform to the information needed to analysis, architecture, designs, implementations, tests, reports..., and ALL of these must be documented. The three perspectives on documents include: - Familiarization - presenting knowledge to all stakeholders - Education - training the developers with the skills needed - Support - troubleshooting the project 20 Describe the main elements of documentation quality focus? The main elements of documentation quality focus can be classified into three aspects: - Integrity: include everything. The documentation should cover all features, usage modes, and interfaces. The essential questions (what, how, where) should be answered. - Fidelity: The document should be logically organized to line out the actions for the prototype matching with the target step by step. - Suitability: The document should know its targeted audience can access the document. It needs to be consistent and professional, and answer all of the possible questions readers might have. 21 Define the term ‘scheduling’ used in project management, and explain the popular techniques used in scheduling? Scheduling is the process of deciding how to commit resources between a variety of possible tasks. Regardless of methodologies, it's still important to forecast long into the future, make deadlines, and plan resources, which scheduling would do. The three main factors to consider when scheduling a task include its duration, dependencies, and constraints. These factors help to estimate the start and finish dates for each task. Gantt Charts are used to visualize this information. Program Evaluation Review Technique (PERT) is a popular to use while scheduling. It has 3-point estimation approach: - Optimistic approach - O: shorted completion time - Most Likely approach - M: balances good/bad conditions - Pessimistic approach - P: longest completion time 22 Describe the main components of interaction in the governance model. Governance is the management framework within which decisions are made. The IT Governance Model is the coordinated interaction of three levels of components. At the bottom level is the Infrastructure, which includes hardware, software, information...everything that enables the collaboration. After that we go to the middle level, which is the Operating procedures to keep the software up to date. At the top level is the Decision-making structures representing management. 23 Describe three main IT governance and risk framework used in IT systems. IT Governance frameworks are to make sure IT systems are providing needed value and limiting risks. There are three main frameworks. COBIT is the IT governance and control model. CMM, which stands for Capability Maturity Model, is focusing on software engineering. ITIL (IT Infrastructure Library) s focusing on IT Service Management. 24 Define the meaning of ‘risk’ and explain the main steps involved in risk management? 'Risk' can be defined as an uncertain condition with consequences (often negative), or the uncertainty around certain factors of the condition. Risk management involves three main processes. First, identify the risk. It could be legal risks, market risks, environmental risks... as much as possible. It is important to expose and visualize anything that could possibly go wrong, so that the second step could be done: prioritizing and determining what can be managed. That involves risk analysis, evaluation, and categorization. The last step is mitigating the effects of potential risks. Not all risks can be eliminated, so we should strive for keeping the risks at their minimal harm. 25 Define the term ‘risk register’ and describe how do ‘risk registers’ managing risks? 'Risk Register' is basically a document for reporting risks. It should include what the risks are, such basic information as the description, the date identified, the impact, the severity, the probability, the priority, ways to manage them, and so on. Newly discovered risks would continually be documented on the register throughout the project. Actions then will be taken to address these identified risks. 26 Define the term ‘governance’, and explain how governance models work in Agile? Governance is the management framework within which decisions are made. In Agile projects, it is important to understand what your organization requires as well as to engage with stakeholders. Governance should minimize the unnecessary work, and make sure the project develop environment is **safe and controlled**. 27 Explain how does ‘retrospective’ work in Agile? Retrospective is a meeting after scrum. It's a time set aside to reflect on past events for the purpose of leaning and improving in the future. In Agile, it provides a safe space for the team to identify what didn't work and what can work better. It embraces a positive spirit to discuss freely for continuous improvements. After a retrospective, actions will be assigned and deadlines will be set. 28 Explain three reasons why quality assurance is essential for agile projects? Quality Assurance is essential because we want our products are matching all the requirements while following all the policies and procedures. To meet that goal, proactive analysis of processes, methods, and outputs is performed. Quality assurance is taken place throughout the project life-cycle. 1. It happens throughout the life cycle 2. It can actively analyze the process, method and product to ensure that the product produced has the required quality 3. It can ensure compliance with policies and procedures. 29 Briefly explain each of the main steps used in Pre-Mortem (failure analysis)? Pre-Mortem, or failure analysis is to identify potential failures, which provides the team an opportunity to be proactive. There are four main steps in Pre-Mortem. - Imagine the failure. In this step, the team brainstorm the possible issues. The facilitator can suggest scenarios. For example, an UX failure could happen when choosing font, too complicated, not enough information provided... - Generate reasons for the failure. In this step, the team members work independently to list possible reasons that causes the failure. For example: loss of funding, loss of key staff, inadequate feedbacks... - Consolidate the list. In this step, the whole team work together to put the list and its according actions into priority. - Revisit the plan. In this step, the Project Owner would approve or add actions on top of the priority, which will add to the requirements for people to work on. Don't expand too much on it so people don't scare away. Keep it simple and creative. 30 Describe the main benefits for ‘Theory of Constraints’ in agile projects? The Theory of Constraints says that all systems have multiple activities linked together. It's impossible to have everything at once, so there is always one activity which acts as the constraints of others, or 'bottleneck'. An example would be the Iron Triangle. The TOC focuses on systematically eliminating the 'bottleneck' until it is no longer a limiting factor. Increased **profit** **Fast** improvement Improved **capacity** Reduced **lead times** Reduced **WIP**","link":"/2021/11/23/Short%20Answer/"}],"tags":[],"categories":[]}